name: CI


on:
  
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  
  workflow_dispatch:


jobs:
  
  build:

    runs-on: ubuntu-latest 

    
    steps:
      
      - uses: actions/checkout@v4

     
      - name: build image 
        run: | 
              docker build -t ${{secrets.REG_USER}}/portfolio:${{github.run_number}} .
              docker build  -t ${{secrets.REG_USER}}/portfolio  .

      - name: Image scan 
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{secrets.REG_USER}}/portfolio:${{github.run_number}}'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'

      - name: push image 
        run: | 
            docker login -u ${{secrets.REG_USER}} -p ${{secrets.REG_PASS}}
        
            docker push ${{secrets.REG_USER}}/portfolio:${{github.run_number}}  
            docker push ${{secrets.REG_USER}}/portfolio    
            
  
  deploy: 
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH to Server 
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          #port: ${{ secrets.PORT }}
          script: |
            echo "=== DEBUG: Setting up variables ==="
            AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
            AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
            AWS_DEFAULT_REGION="${{ secrets.AWS_REGION }}"
            ECR_REGISTRY="${{ steps.login-ecr.outputs.registry }}"
            ECR_REPOSITORY="${{ secrets.ECR_REPOSITORY }}"
            RUN_NUMBER="${{ github.run_number }}"
            
            echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:0:10}..."
            echo "AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION"
            echo "ECR_REGISTRY: $ECR_REGISTRY"
            echo "ECR_REPOSITORY: $ECR_REPOSITORY"
            echo "RUN_NUMBER: $RUN_NUMBER"
            echo "============================================="
            
            if [ -z "$AWS_DEFAULT_REGION" ]; then
              echo "ERROR: AWS_DEFAULT_REGION is empty"
              exit 1
            fi
            
            if [ -z "$ECR_REGISTRY" ]; then
              echo "ERROR: ECR_REGISTRY is empty"
              exit 1
            fi
            
            echo "Logging into ECR..."
            export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
            export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
            export AWS_DEFAULT_REGION="$AWS_DEFAULT_REGION"
            
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
            echo "Stopping old container..."
            docker rm -f resume || echo "No existing container"
            echo "Running new container..."
            docker run -d --name resume -p 8080:5001 $ECR_REGISTRY/$ECR_REPOSITORY:$RUN_NUMBER